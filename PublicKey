
public class PublicKey {

	
	public static void main(String[] args){
		long x =0;
		long i =0;
		for(i =0;i<8415000;i++){
			x = modPow(2744, i, 24852977);
			if(x ==8414508){
				break;
			}
		}
		System.out.println(i);
		
		long y = 0;
		
		y = modPow(15268076,(24852977-1-i),24852977);
		System.out.println(y);
		
		long almost = modMult(y,743675,24852977);
		System.out.println(almost );
	}
	
	
		public static long modPow(long number, long power, long modulus){//raises a number to a power with the given modulus
			if(power==0)
				return 1;
			else if (power%2==0) {
				long halfpower=modPow(number, power/2, modulus);
				return modMult(halfpower,halfpower,modulus);
			}
			else{
				long halfpower=modPow(number, power/2, modulus);
				long firstbit = modMult(halfpower,halfpower,modulus);
				return modMult(firstbit,number,modulus);
			}
		}
		
		public static long modMult(long first, long second, long modulus){
				if(second==0)
				return 0;
			else if (second%2==0) {
				long half=modMult(first, second/2, modulus);
				return (half+half)%modulus;
			}
			else{
				long half=modMult(first, second/2, modulus);
				return (half+half+first)%modulus;
			}

		}
	
}
